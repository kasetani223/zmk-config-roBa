#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                 &kp T                                                                 &kp Y                   &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                 &kp G                   &trans                      &trans            &kp H                   &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                 &lt 3 B                 &lt 7 TAB                   &lt 6 LANGUAGE_2  &kp N                   &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp TAB           &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL LANGUAGE_1  &lt_to_layer_0 1 SPACE  &lt_to_layer_0 2 LANG2      &kp BACKSPACE     &lt_to_layer_0 1 ENTER                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        Control {
            bindings = <
&kp LC(LG(LEFT_ARROW))  &kp LS(LG(LEFT_ARROW))  &kp LG(UP_ARROW)    &kp LS(LG(RIGHT_ARROW))  &kp LC(LG(RIGHT_ARROW))                                     &kp LS(LG(S))        &kp PAGE_DOWN    &kp UP_ARROW    &kp PAGE_UP      &kp HOME
&kp LC(LS(TAB))         &kp LG(LEFT_ARROW)      &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)      &kp LC(TAB)              &trans         &trans              &kp LG(TAB)          &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp LEFT_SHIFT          &trans                  &kp LC(MINUS)       &kp LC(EQUAL)            &trans                   &trans         &trans              &trans               &kp LC(LS(TAB))  &trans          &kp LC(TAB)      &kp LG(R)
&kp CAPSLOCK            &trans                  &trans              &kp DELETE               &kp LC(Z)                &kp LC(Y)      &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)                                                    &kp LG(L)
            >;
        };

        Number {
            bindings = <
&kp UNDERSCORE  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH                       &kp F11  &kp F12  &trans  &trans  &trans
&kp MINUS       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COLON   &trans      &trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans      &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&trans          &trans        &trans        &trans        &trans      &trans      &trans  &trans                            &trans
            >;
        };

        Symbol {
            bindings = <
&kp TILDE     &kp GRAVE      &kp PLUS     &kp EQUAL        &trans                            &trans         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN
&kp DOLLAR    &kp HASH       &kp AT_SIGN  &kp EXCLAMATION  &kp QUESTION  &trans      &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp SINGLE_QUOTE
&kp ASTERISK  &kp AMPERSAND  &kp CARET    &kp PERCENT      &trans        &trans      &trans  &kp PIPE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON      &kp DOUBLE_QUOTES
&trans        &trans         &trans       &trans           &trans        &trans      &trans  &trans                                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        Device {
            bindings = <
&trans  &kp C_BRIGHTNESS_DEC  &trans            &kp C_BRIGHTNESS_INC  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT            &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_VOL_DN          &kp C_MUTE        &kp C_VOLUME_UP       &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                &trans            &trans                &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
